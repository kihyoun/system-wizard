#-------------------------------------------------------------
#                +------------------+                        |
#               /|                 /|                        |
#              / |                / |                        |
#             *--+---------------*  |                        |
#             |  |               |  |                        |
#             |  |  System       |  |                        |
#             |  |  Bootstrapper |  |                        |
#             |  +---------------+--+                        |
#             | /                | /                         |
#             |/                 |/                          |
#             *------------------*                           |
#    +------+ https://www.system-bootstrapper.com
#$  /      /|                                                |
#  +------+ |                                                |
#  |      | +                                                |
#  |      |/                                                 |
#  +------+                                                  |
#-------------------------------------------------------------
# Gitlab CI Definition
# ProjectID: systembootstrapper
# Production: https://www.system-bootstrapper.com

# Review Apps: http://*.system-bootstrapper.com
# Filepath: ./gitlab-ci.yml
image: docker:latest
services:
  - docker:dind
variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
stages:
  - build
  - test
  - deploy
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules
build:
  stage: build
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - merge_requests
    - master
test:cypress:
  stage: test
  services:
    - name: $IMAGE_TAG
      alias: alpha-host
  image: cypress/base:10
  script:
    - npm ci
    # check Cypress binary path and cached versions
    # useful to make sure we are not carrying around old versions
    - npx cypress cache path
    - npx cypress cache list
    - npx cypress run --config baseUrl=http://alpha-host:80
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
  only:
    - merge_requests
    - master
test:review:
  stage: test
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: http://$CI_BUILD_REF_SLUG.system-bootstrapper.com
    on_stop: stop:review
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - set +e
    - docker stop $CI_BUILD_REF_SLUG.system-bootstrapper.com
    - docker rm $CI_BUILD_REF_SLUG.system-bootstrapper.com
    - set -e
  script:
    - docker run -itd --network systembootstrapper_review -e VIRTUAL_HOST=$CI_BUILD_REF_SLUG.system-bootstrapper.com --name $CI_BUILD_REF_SLUG.system-bootstrapper.com $IMAGE_TAG
  except:
    - master
  only:
    - merge_requests

stop:review:
  stage: deploy
  allow_failure: true
  script:
    - docker stop $CI_BUILD_REF_SLUG.system-bootstrapper.com
    - docker rm $CI_BUILD_REF_SLUG.system-bootstrapper.com
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  when: manual
  only:
    - merge_requests

deploy:prod:
  stage: deploy
  environment:
    name: production/www
    url: https://www.system-bootstrapper.com
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - set +e
    - docker stop www.system-bootstrapper.com
    - docker rm www.system-bootstrapper.com
    - set -e
  script:
    - docker run -itd --network systembootstrapper_prod \
      -e VIRTUAL_HOST=www.system-bootstrapper.com \
      --name www.system-bootstrapper.com $IMAGE_TAG
  only:
    - master

